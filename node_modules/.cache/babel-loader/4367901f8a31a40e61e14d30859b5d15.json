{"ast":null,"code":"var _jsxFileName = \"/home/shreyansh/Documents/Github/mystic-space/src/App.js\";\nimport React from 'react';\nimport { Switch, Route } from \"react-router-dom\";\nimport './App.css';\nimport HomePage from './pages/homepage/homepage.components';\nimport ShopPage from './pages/shop/shop.components';\nimport Header from './components/header/header.component';\nimport SignInSignUp from './pages/sign-in-and-sign-up/sign-in-and-sign-up.components';\nimport { auth, createUserProfileDocument } from './firebase/firebase.utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.unSubscribeFromAuth = null;\n    this.state = {\n      currentUser: null\n    };\n  }\n\n  //Now if a user signs in:\n  componentDidMount() {\n    this.unSubscribeFromAuth = auth.onAuthStateChanged(async userAuth => {\n      if (userAuth) {\n        //we will check if they are actually signing in because there is userAuth involved\n        const userRef = await createUserProfileDocument(userAuth); //we will get back the userRef if it exists otherwise we'll create it and get it. our Function \"createUserProfileDocument\" is doing it for us;\n        //Then we're gonna subscribe meaning we're gonna listen to this userRef for any changes to that data & get back the first state\n        //Then using that we are gonna set state of our local app.js \n\n        userRef.onSnapshot(snapshot => {\n          this.setState({\n            id: snapshot.id,\n            ...snapshot.data()\n          });\n        });\n      } else {\n        //if the user logs out userAuth will be none and we updated our state accordingly.\n        this.setState({\n          currentUser: null\n        });\n        console.log(userAuth);\n      } //this.setState({ currentUser: user });\n      //console.log(user);\n\n    });\n  }\n\n  componentWillUnmount() {\n    this.unSubscribeFromAuth();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        currentUser: this.state.currentUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          component: HomePage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/shop\",\n          component: ShopPage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/signin\",\n          component: SignInSignUp\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/shreyansh/Documents/Github/mystic-space/src/App.js"],"names":["React","Switch","Route","HomePage","ShopPage","Header","SignInSignUp","auth","createUserProfileDocument","App","Component","constructor","unSubscribeFromAuth","state","currentUser","componentDidMount","onAuthStateChanged","userAuth","userRef","onSnapshot","snapshot","setState","id","data","console","log","componentWillUnmount","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,KAAjB,QAA8B,kBAA9B;AAEA,OAAO,WAAP;AAEA,OAAOC,QAAP,MAAqB,sCAArB;AACA,OAAOC,QAAP,MAAqB,8BAArB;AACA,OAAOC,MAAP,MAAmB,sCAAnB;AACA,OAAOC,YAAP,MAAyB,4DAAzB;AACA,SAASC,IAAT,EAAeC,yBAAf,QAAgD,2BAAhD;;;AAEA,MAAMC,GAAN,SAAkBT,KAAK,CAACU,SAAxB,CAAkC;AAChCC,EAAAA,WAAW,GAAI;AACb;AADa,SAQfC,mBARe,GAQO,IARP;AAGb,SAAKC,KAAL,GAAa;AACXC,MAAAA,WAAW,EAAE;AADF,KAAb;AAGD;;AAID;AACAC,EAAAA,iBAAiB,GAAG;AAClB,SAAKH,mBAAL,GAA2BL,IAAI,CAACS,kBAAL,CAAwB,MAAMC,QAAN,IAAkB;AACnE,UAAIA,QAAJ,EAAc;AAAE;AACd,cAAMC,OAAO,GAAG,MAAMV,yBAAyB,CAACS,QAAD,CAA/C,CADY,CAC8C;AAE1D;AACA;;AACAC,QAAAA,OAAO,CAACC,UAAR,CAAmBC,QAAQ,IAAI;AAC7B,eAAKC,QAAL,CAAc;AACZC,YAAAA,EAAE,EAAEF,QAAQ,CAACE,EADD;AAEZ,eAAGF,QAAQ,CAACG,IAAT;AAFS,WAAd;AAID,SALD;AAMD,OAXD,MAYK;AAAE;AACL,aAAKF,QAAL,CAAc;AAAEP,UAAAA,WAAW,EAAE;AAAf,SAAd;AACAU,QAAAA,OAAO,CAACC,GAAR,CAAYR,QAAZ;AACD,OAhBkE,CAiBnE;AACA;;AACD,KAnB0B,CAA3B;AAoBD;;AAEDS,EAAAA,oBAAoB,GAAG;AACrB,SAAKd,mBAAL;AACD;;AAGDe,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,8BACE,QAAC,MAAD;AAAQ,QAAA,WAAW,EAAG,KAAKd,KAAL,CAAWC;AAAjC;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,MAAD;AAAA,gCACE,QAAC,KAAD;AAAO,UAAA,KAAK,MAAZ;AAAa,UAAA,IAAI,EAAC,GAAlB;AAAsB,UAAA,SAAS,EAAGX;AAAlC;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,OAAZ;AAAoB,UAAA,SAAS,EAAGC;AAAhC;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,SAAZ;AAAsB,UAAA,SAAS,EAAGE;AAAlC;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAUD;;AAnD+B;;AAuDlC,eAAeG,GAAf","sourcesContent":["import React from 'react';\nimport { Switch, Route } from \"react-router-dom\";\n\nimport './App.css';\n\nimport HomePage from './pages/homepage/homepage.components'\nimport ShopPage from './pages/shop/shop.components'\nimport Header from './components/header/header.component'\nimport SignInSignUp from './pages/sign-in-and-sign-up/sign-in-and-sign-up.components';\nimport { auth, createUserProfileDocument } from './firebase/firebase.utils';\n\nclass App extends React.Component {\n  constructor () {\n    super();\n\n    this.state = {\n      currentUser: null\n    }\n  }\n\n  unSubscribeFromAuth = null;\n\n  //Now if a user signs in:\n  componentDidMount() {\n    this.unSubscribeFromAuth = auth.onAuthStateChanged(async userAuth => {\n      if (userAuth) { //we will check if they are actually signing in because there is userAuth involved\n        const userRef = await createUserProfileDocument(userAuth);//we will get back the userRef if it exists otherwise we'll create it and get it. our Function \"createUserProfileDocument\" is doing it for us;\n\n        //Then we're gonna subscribe meaning we're gonna listen to this userRef for any changes to that data & get back the first state\n        //Then using that we are gonna set state of our local app.js \n        userRef.onSnapshot(snapshot => {\n          this.setState({\n            id: snapshot.id,\n            ...snapshot.data()\n          });\n        });\n      }\n      else { //if the user logs out userAuth will be none and we updated our state accordingly.\n        this.setState({ currentUser: null });\n        console.log(userAuth);\n      }\n      //this.setState({ currentUser: user });\n      //console.log(user);\n    });\n  }\n\n  componentWillUnmount() {\n    this.unSubscribeFromAuth();\n  }\n\n\n  render() {\n    return (\n      <div>\n        <Header currentUser={ this.state.currentUser } />\n        <Switch>\n          <Route exact path=\"/\" component={ HomePage } />\n          <Route path=\"/shop\" component={ ShopPage } />\n          <Route path=\"/signin\" component={ SignInSignUp } />\n        </Switch>\n      </div>\n    );\n  }\n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}